{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description": "Creates resources for Activity Log backend components.",
	"Parameters" : {
		"Environment" : {
			"Type" : "String",
			"AllowedValues" : ["test", "prod"]
		}
	},
    "Resources" : {
    	"ActivitiesTable": {
    		"Type": "AWS::DynamoDB::Table",
    		"Properties": {
    			"TableName": {"Fn::Sub": "activity-log-activities-${Environment}-table"},
    			"KeySchema": [
    				{"AttributeName": "id", "KeyType": "HASH"}
    			],
				"AttributeDefinitions" : [
			        {
			            "AttributeName" : "id",
			            "AttributeType" : "S"   
			        }
			    ],
			    "BillingMode": "PAY_PER_REQUEST",
    			"Tags": [
                    {"Key": "sc:application", "Value": "Activity Log"},
    				{"Key": "sc:functionality:area", "Value": "Activities"},
                    {"Key": "sc:environment", "Value": {"Fn::Sub": "${Environment}"}}
    			]
    		}
    	},
    	"DutiesTable": {
    		"Type": "AWS::DynamoDB::Table",
    		"Properties": {
    			"TableName": {"Fn::Sub": "activity-log-duties-${Environment}-table"},
    			"KeySchema": [
    				{"AttributeName": "id", "KeyType": "HASH"}
    			],
				"AttributeDefinitions" : [
			        {
			            "AttributeName" : "id",
			            "AttributeType" : "S"   
			        }
			    ],
                "BillingMode": "PAY_PER_REQUEST",
			    "Tags": [
                    {"Key": "sc:application", "Value": "Activity Log"},
                    {"Key": "sc:functionality:area", "Value": "Duties"},
                    {"Key": "sc:environment", "Value": {"Fn::Sub": "${Environment}"}}
    			]
    		}
    	},
        "DutyTypesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {"Fn::Sub": "activity-log-duty-types-${Environment}-table"},
                "KeySchema": [
                    {"AttributeName": "id", "KeyType": "HASH"}
                ],
                "AttributeDefinitions" : [
                    {
                        "AttributeName" : "id",
                        "AttributeType" : "S"   
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "Tags": [
                    {"Key": "sc:application", "Value": "Activity Log"},
                    {"Key": "sc:functionality:area", "Value": "Duties"},
                    {"Key": "sc:environment", "Value": {"Fn::Sub": "${Environment}"}}
                ]
            }
        },
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Fn::Sub": "sebcel-activity-log-${Environment}-lambda-execution-role"},
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": ["lambda.amazonaws.com"]
                            },
                            "Action": ["sts:AssumeRole"]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "LambdaExecutionPolicy": {
            "DependsOn": [
                "LambdaExecutionRole"
            ],
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {"Fn::Sub": "sebcel-activity-log-${Environment}-lambda-execution-policy"},
                "Roles": [
                    {"Ref": "LambdaExecutionRole"}
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": ["logs:*"],
                            "Resource": ["arn:aws:logs:*:*:*"]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:PutItem",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:DeleteItem"
                            ],
                            "Resource": [
                                { "Fn::GetAtt": ["ActivitiesTable", "Arn"]},
                                { "Fn::GetAtt": ["DutiesTable", "Arn"]},
                                { "Fn::GetAtt": ["DutyTypesTable", "Arn"]}
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": "xray:PutTraceSegments",
                            "Resource": "*"
                        }
                    ]
                }
            }
        },
        "ApiGatewayExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Fn::Sub": "sebcel-activity-log-${Environment}-apigateway-execution-role"},
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": ["apigateway.amazonaws.com"]
                            },
                            "Action": ["sts:AssumeRole"]
                        }
                    ]
                },
                "Path": "/"
            }
        },
        "ApiGatewayExecutionPolicy": {
            "DependsOn": [
                "ApiGatewayExecutionRole"
            ],
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {"Fn::Sub": "sebcel-activity-log-${Environment}-apigateway-execution-policy"},
                "Roles": [
                    {"Ref": "ApiGatewayExecutionRole"}
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": ["logs:*"],
                            "Resource": ["arn:aws:logs:*:*:*"]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:PutItem",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:DeleteItem"
                            ],
                            "Resource": [
                                { "Fn::GetAtt": ["ActivitiesTable", "Arn"]},
                                { "Fn::GetAtt": ["DutiesTable", "Arn"]},
                                { "Fn::GetAtt": ["DutyTypesTable", "Arn"]}
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "lambda:InvokeFunction"
                            ],
                            "Resource": [
                                { "Fn::GetAtt": ["GetDutyTypesFunction", "Arn"]},
                                { "Fn::GetAtt": ["GetDutiesFunction", "Arn"]},
                                { "Fn::GetAtt": ["SaveDutyDataFunction", "Arn"]},
                                { "Fn::GetAtt": ["DeleteDutyDataFunction", "Arn"]}
                            ]
                        }
                    ]
                }
            }
        },
        "CreateDutyTypeFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": "LambdaExecutionPolicy",
            "Properties": {
                "FunctionName": {"Fn::Sub": "activity-log-create-duty-type-${Environment}-function"},
                "Code": {
                    "S3Bucket": "sebcel-activity-log-backend-sources",
                    "S3Key": "CreateDutyTypeFunction.zip"
                },
                "Environment": {
                    "Variables": {
                        "tableName": { "Ref": "DutyTypesTable"}
                    }
                },
                "Handler": "CreateDutyTypeFunction.handler",
                "Runtime": "nodejs8.10",
                "Timeout": 60,
                "MemorySize": 128,
                "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]},
                "TracingConfig": {
                    "Mode": "Active"
                },
                "Tags": [
                    {"Key": "sc:application", "Value": "Activity Log"},
                    {"Key": "sc:functionality:area", "Value": "Duties"},
                    {"Key": "sc:environment", "Value": {"Fn::Sub": "${Environment}"}}
                ]
            }
        },
        "GetDutyTypesFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": "LambdaExecutionPolicy",
            "Properties": {
                "FunctionName": {"Fn::Sub": "activity-log-get-duty-types-${Environment}-function"},
                "Code": {
                    "S3Bucket": "sebcel-activity-log-backend-sources",
                    "S3Key": "GetDutyTypesFunction.zip"
                },
                "Environment": {
                    "Variables": {
                        "tableName": { "Ref": "DutyTypesTable"}
                    }
                },
                "Handler": "GetDutyTypesFunction.handler",
                "Runtime": "nodejs8.10",
                "Timeout": 60,
                "MemorySize": 128,
                "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]},
                "TracingConfig": {
                    "Mode": "Active"
                },
                "Tags": [
                    {"Key": "sc:application", "Value": "Activity Log"},
                    {"Key": "sc:functionality:area", "Value": "Duties"},
                    {"Key": "sc:environment", "Value": {"Fn::Sub": "${Environment}"}}
                ]
            }
        },
        "GetDutiesFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": "LambdaExecutionPolicy",
            "Properties": {
                "FunctionName": {"Fn::Sub": "activity-log-get-duties-${Environment}-function"},
                "Code": {
                    "S3Bucket": "sebcel-activity-log-backend-sources",
                    "S3Key": "GetDutiesFunction.zip"
                },
                "Environment": {
                    "Variables": {
                        "tableName": { "Ref": "DutiesTable"}
                    }
                },
                "Handler": "GetDutiesFunction.handler",
                "Runtime": "nodejs8.10",
                "Timeout": 60,
                "MemorySize": 128,
                "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]},
                "TracingConfig": {
                    "Mode": "Active"
                },
                "Tags": [
                    {"Key": "sc:application", "Value": "Activity Log"},
                    {"Key": "sc:functionality:area", "Value": "Duties"},
                    {"Key": "sc:environment", "Value": {"Fn::Sub": "${Environment}"}}
                ]
            }
        },
        "SaveDutyDataFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": "LambdaExecutionPolicy",
            "Properties": {
                "FunctionName": {"Fn::Sub": "activity-log-save-duty-data-${Environment}-function"},
                "Code": {
                    "S3Bucket": "sebcel-activity-log-backend-sources",
                    "S3Key": "SaveDutyDataFunction.zip"
                },
                "Environment": {
                    "Variables": {
                        "dutiesTableName": { "Ref": "DutiesTable"},
                        "dutyTypesTableName": { "Ref": "DutyTypesTable"}
                    }
                },
                "Handler": "SaveDutyDataFunction.handler",
                "Runtime": "nodejs8.10",
                "Timeout": 60,
                "MemorySize": 128,
                "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]},
                "TracingConfig": {
                    "Mode": "Active"
                },
                "Tags": [
                    {"Key": "sc:application", "Value": "Activity Log"},
                    {"Key": "sc:functionality:area", "Value": "Duties"},
                    {"Key": "sc:environment", "Value": {"Fn::Sub": "${Environment}"}}
                ]
            }
        },
        "DeleteDutyDataFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": "LambdaExecutionPolicy",
            "Properties": {
                "FunctionName": {"Fn::Sub": "activity-log-delete-duty-data-${Environment}-function"},
                "Code": {
                    "S3Bucket": "sebcel-activity-log-backend-sources",
                    "S3Key": "DeleteDutyDataFunction.zip"
                },
                "Environment": {
                    "Variables": {
                        "tableName": { "Ref": "DutiesTable"}
                    }
                },
                "Handler": "DeleteDutyDataFunction.handler",
                "Runtime": "nodejs8.10",
                "Timeout": 60,
                "MemorySize": 128,
                "Role": { "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]},
                "TracingConfig": {
                    "Mode": "Active"
                },
                "Tags": [
                    {"Key": "sc:application", "Value": "Activity Log"},
                    {"Key": "sc:functionality:area", "Value": "Duties"},
                    {"Key": "sc:environment", "Value": {"Fn::Sub": "${Environment}"}}
                ]
            }
        },
        "ActivityLogApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": {"Fn::Sub": "activity-log-${Environment}-api"},
                "Description": "Allows access to Activity Log data for activities and duties"
            }
        },
        "ActivitiesResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": { "Ref": "ActivityLogApi" },
                "ParentId": { "Fn::GetAtt": ["ActivityLogApi", "RootResourceId"] },
                "PathPart": "activities"
            }
        },
        "ActivityResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": { "Ref": "ActivityLogApi" },
                "ParentId": { "Ref": "ActivitiesResource"},
                "PathPart": "{id}"
            }
        },
        "DutiesResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": { "Ref": "ActivityLogApi" },
                "ParentId": { "Fn::GetAtt": ["ActivityLogApi", "RootResourceId"] },
                "PathPart": "duties"
            }
        },
        "DutyTypesResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": { "Ref": "ActivityLogApi" },
                "ParentId": { "Fn::GetAtt": ["ActivityLogApi", "RootResourceId"] },
                "PathPart": "dutytypes"
            }
        },
        "GetOptionsForActivitiesResource": {
            "Type":"AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "ResourceId": {"Ref": "ActivitiesResource"},
                "HttpMethod": "OPTIONS",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": "true",
                            "method.response.header.Access-Control-Allow-Methods": "true",
                            "method.response.header.Access-Control-Allow-Origin": "true"
                        }
                    }
                ]
            }
        },
        "GetOptionsForActivityResourcee": {
            "Type":"AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "ResourceId": {"Ref": "ActivityResource"},
                "HttpMethod": "OPTIONS",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,DELETE,OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": "true",
                            "method.response.header.Access-Control-Allow-Methods": "true",
                            "method.response.header.Access-Control-Allow-Origin": "true"
                        }
                    }
                ]
            }
        },
        "GetOptionsForDutiesResource": {
            "Type":"AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "ResourceId": {"Ref": "DutiesResource"},
                "HttpMethod": "OPTIONS",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,DELETE,OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": "true",
                            "method.response.header.Access-Control-Allow-Methods": "true",
                            "method.response.header.Access-Control-Allow-Origin": "true"
                        }
                    }
                ]
            }
        },
        "GetOptionsForDutyTypesResource": {
            "Type":"AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "ResourceId": {"Ref": "DutyTypesResource"},
                "HttpMethod": "OPTIONS",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": "true",
                            "method.response.header.Access-Control-Allow-Methods": "true",
                            "method.response.header.Access-Control-Allow-Origin": "true"
                        }
                    }
                ]
            }
        },
        "GetActivitiesForUser": {
            "Type":"AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "ResourceId": {"Ref": "ActivitiesResource"},
                "HttpMethod": "GET",
                "AuthorizationType": "COGNITO_USER_POOLS",
                "AuthorizerId": {"Ref": "CognitoAuthorizer"},
                "ApiKeyRequired": true,
                "RequestParameters": {
                    "method.request.querystring.user": "true"
                },
                "Integration": {
                    "Type": "AWS",
                    "IntegrationHttpMethod": "POST",
                    "Credentials": { "Fn::GetAtt": ["ApiGatewayExecutionRole", "Arn"]},
                    "Uri": "arn:aws:apigateway:eu-west-1:dynamodb:action/Scan",
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": {"Fn::Sub": "{ \"TableName\": \"${ActivitiesTable}\", \"FilterExpression\": \"#c = :val\", \"ExpressionAttributeValues\": {\":val\": {\"S\": \"$input.params('user')\"}}, \"ExpressionAttributeNames\": {\"#c\": \"user\"} } "} 
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseTemplates": {
                                "application/json": "#set($inputRoot = $input.path('$')) [#foreach($elem in $inputRoot.Items) { \"id\" : \"$elem.id.S\", \"date\" : \"$elem.date.S\", \"user\" : \"$elem.user.S\", \"type\" : \"$elem.type.S\", \"description\" : \"$elem.description.S\", \"duration\" : $elem.duration.N } #if($foreach.hasNext),#end #end ]"
                            },
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": "true"
                        }
                    }
                ]
            }
        },
        "AddActivity": {
            "Type":"AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "ResourceId": {"Ref": "ActivitiesResource"},
                "HttpMethod": "POST",
                "AuthorizationType": "COGNITO_USER_POOLS",
                "AuthorizerId": {"Ref": "CognitoAuthorizer"},
                "ApiKeyRequired": true,
                "Integration": {
                    "Type": "AWS",
                    "IntegrationHttpMethod": "POST",
                    "Credentials": { "Fn::GetAtt": ["ApiGatewayExecutionRole", "Arn"]},
                    "Uri": "arn:aws:apigateway:eu-west-1:dynamodb:action/PutItem",
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": {"Fn::Join": ["", [
                                "#set($inputRoot = $input.path('$')) { \"TableName\":\"",
                                {"Ref": "ActivitiesTable"},
                                "\", \"Item\": { \"id\": { \"S\": \"${inputRoot.id}\" }, \"date\": { \"S\": \"${inputRoot.date}\" }, \"type\": { \"S\": \"${inputRoot.type}\" }, \"user\": { \"S\": \"${inputRoot.user}\" }, \"description\": { \"S\": \"${inputRoot.description}\" }, \"duration\": { \"N\": \"${inputRoot.duration}\"} } }"
                            ]]
                        } 
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseTemplates": {
                                "application/json": ""
                            },
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": "true"
                        }
                    }
                ]
            }
        },
        "DeleteActivity": {
            "Type":"AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "ResourceId": {"Ref": "ActivityResource"},
                "HttpMethod": "DELETE",
                "AuthorizationType": "COGNITO_USER_POOLS",
                "AuthorizerId": {"Ref": "CognitoAuthorizer"},
                "ApiKeyRequired": true,
                "Integration": {
                    "Type": "AWS",
                    "IntegrationHttpMethod": "POST",
                    "Credentials": { "Fn::GetAtt": ["ApiGatewayExecutionRole", "Arn"]},
                    "Uri": "arn:aws:apigateway:eu-west-1:dynamodb:action/DeleteItem",
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": {"Fn::Join": ["", [
                                "{ \"TableName\": \"",
                                {"Ref": "ActivitiesTable"},
                                "\", \"Key\": { \"id\": { \"S\": \"${method.request.path.id}\" } } } "
                            ]]
                        } 
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseTemplates": {
                                "application/json": ""
                            },
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": "true"
                        }
                    }
                ]
            }
        },
        "GetDutyTypes": {
            "Type":"AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "ResourceId": {"Ref": "DutyTypesResource"},
                "HttpMethod": "GET",
                "AuthorizationType": "COGNITO_USER_POOLS",
                "AuthorizerId": {"Ref": "CognitoAuthorizer"},
                "ApiKeyRequired": true,
                "Integration": {
                    "Type": "AWS",
                    "IntegrationHttpMethod": "POST",
                    "Credentials": { "Fn::GetAtt": ["ApiGatewayExecutionRole", "Arn"]},
                    "Uri": { "Fn::Join":[ "", [
                            "arn:aws:apigateway:",
                            {"Ref" : "AWS::Region"},
                            ":lambda:path/2015-03-31/functions/",
                            {"Fn::GetAtt": ["GetDutyTypesFunction", "Arn"]},
                            "/invocations"
                        ]]},
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": ""
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseTemplates": {
                                "application/json": "#set($inputRoot = $input.path('$')) [#foreach($elem in $inputRoot.Items) \"$elem.type.S\" #if($foreach.hasNext),#end #end ]"
                            },
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": "true"
                        }
                    }
                ]
            }
        },
        "GetDuties": {
            "Type":"AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "ResourceId": {"Ref": "DutiesResource"},
                "HttpMethod": "GET",
                "AuthorizationType": "COGNITO_USER_POOLS",
                "AuthorizerId": {"Ref": "CognitoAuthorizer"},
                "ApiKeyRequired": true,
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Credentials": { "Fn::GetAtt": ["ApiGatewayExecutionRole", "Arn"]},
                    "Uri": { "Fn::Join":[ "", [
                            "arn:aws:apigateway:",
                            {"Ref" : "AWS::Region"},
                            ":lambda:path/2015-03-31/functions/",
                            {"Fn::GetAtt": ["GetDutiesFunction", "Arn"]},
                            "/invocations"
                        ]]},
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": ""
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": "true"
                        }
                    }
                ]
            }
        },
        "SaveDutyData": {
            "Type":"AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "ResourceId": {"Ref": "DutiesResource"},
                "HttpMethod": "POST",
                "AuthorizationType": "COGNITO_USER_POOLS",
                "AuthorizerId": {"Ref": "CognitoAuthorizer"},
                "ApiKeyRequired": true,
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Credentials": { "Fn::GetAtt": ["ApiGatewayExecutionRole", "Arn"]},
                    "Uri": { "Fn::Join":[ "", [
                            "arn:aws:apigateway:",
                            {"Ref" : "AWS::Region"},
                            ":lambda:path/2015-03-31/functions/",
                            {"Fn::GetAtt": ["SaveDutyDataFunction", "Arn"]},
                            "/invocations"
                        ]]},
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": ""
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": "true"
                        }
                    }
                ]
            }
        },
        "DeleteDutyData": {
            "Type":"AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "ResourceId": {"Ref": "DutiesResource"},
                "HttpMethod": "DELETE",
                "AuthorizationType": "COGNITO_USER_POOLS",
                "AuthorizerId": {"Ref": "CognitoAuthorizer"},
                "ApiKeyRequired": true,
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Credentials": { "Fn::GetAtt": ["ApiGatewayExecutionRole", "Arn"]},
                    "Uri": { "Fn::Join":[ "", [
                            "arn:aws:apigateway:",
                            {"Ref" : "AWS::Region"},
                            ":lambda:path/2015-03-31/functions/",
                            {"Fn::GetAtt": ["DeleteDutyDataFunction", "Arn"]},
                            "/invocations"
                        ]]},
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": ""
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": "200",
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            }
                        }
                    ]
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200",
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": "true"
                        }
                    }
                ]
            }
        },
        "DummyDeployment": {
            "Type" : "AWS::ApiGateway::Deployment",
            "Properties" : {
                "Description" : "Initial deployment",
                "RestApiId" : {"Ref": "ActivityLogApi"},
                "StageName" : "dummy"
            },
            "DependsOn": "DeleteDutyData"
        },
        "DefaultStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "RestApiId": {"Ref": "ActivityLogApi"},
                "DeploymentId": {"Ref": "DummyDeployment"},
                "StageName": "default",
                "Description": "Default stage for Activity Log API",
                "Tags": [
                    {"Key": "sc:application", "Value": "Activity Log"},
                    {"Key": "sc:environment", "Value": {"Fn::Sub": "${Environment}"}}
                ],
                "TracingEnabled": true,
                "AccessLogSetting" : {
                    "DestinationArn": {"Fn::GetAtt": ["AccessLogGroup", "Arn"]},
                    "Format": "$context.requestTime $context.requestId $context.identity.sourceIp $context.protocol $context.path $context.httpMethod $context.identity.caller $context.error.message"
                },
                "MethodSettings": [{
                    "ResourcePath": "/*",
                    "HttpMethod": "*",
                    "LoggingLevel": "INFO",
                    "ThrottlingBurstLimit": 10,
                    "ThrottlingRateLimit": 10
                }]
            }
        },
        "AccessLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {"Fn::Sub": "activity-log-${Environment}-access-logs"},
                "RetentionInDays": 90
            }
        },
        "UserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
                "UserPoolName": {"Fn::Sub": "activity-log-${Environment}-user-pool"},
                "UserPoolTags": {
                    "sc:application": "Activity Log",
                    "sc:functionality:area": "User management",
                    "sc:environment": {"Fn::Sub": "${Environment}"}
                },
                "AdminCreateUserConfig": {
                    "AllowAdminCreateUserOnly": true
                },
                "Policies": {
                    "PasswordPolicy": {
                        "MinimumLength" : 6,
                        "RequireLowercase" : false,
                        "RequireNumbers" : false,
                        "RequireSymbols" : false,
                        "RequireUppercase" : false
                    }
                }
            }
        },
        "UserPoolAppClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
                "ClientName": {"Fn::Sub": "activity-log-${Environment}-app-client"},
                "UserPoolId": {"Ref": "UserPool"}
            }
        },
        "CognitoAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
                "Name": {"Fn::Sub": "activity-log-${Environment}-cognito-authorizer"},
                "Type": "COGNITO_USER_POOLS",
                "RestApiId": {"Ref": "ActivityLogApi"},
                "IdentitySource": "method.request.header.Authorization",
                "ProviderARNs": [{"Fn::GetAtt": ["UserPool", "Arn"]}]
            }
        },
        "WebAppUsagePlan": {
            "Type": "AWS::ApiGateway::UsagePlan",
            "Properties": {
                "UsagePlanName": {"Fn::Sub": "activity-log-${Environment}-webapp-usage-plan"},
                "Description": "Basic usage plan for Activity Log",
                "ApiStages": [
                    {
                        "ApiId": {"Ref": "ActivityLogApi"},
                        "Stage": {"Ref": "DefaultStage"}
                    }
                ],
                "Quota": {
                    "Limit": 200,
                    "Period": "DAY"
                },
                "Throttle": {
                    "BurstLimit": 10,
                    "RateLimit": 5
                }
            }
        },
        "WebAppApiKey": {
            "Type": "AWS::ApiGateway::ApiKey",
            "Properties": {
                "Name": {"Fn::Sub": "activity-log-${Environment}-webapp-api-key"},
                "Description": "Default API key for the Activity Log webapp",
                "Enabled": true,
                "StageKeys": [
                    {
                        "RestApiId": {"Ref": "ActivityLogApi"},
                        "StageName": {"Ref": "DefaultStage"}
                    }
                ]
            }
        },
        "WebAppApiKeyUsagePlanAssociation": {
            "Type": "AWS::ApiGateway::UsagePlanKey",
            "Properties": {
                "KeyId": {"Ref": "WebAppApiKey"},
                "KeyType": "API_KEY",
                "UsagePlanId": {"Ref": "WebAppUsagePlan"}
            }
        }
    },
    "Outputs": {
        "ActivityLogCognitoUserPoolID": {
            "Description": "Cognito User Pool id to be used with Cognito during authentication",
            "Value": {"Ref": "UserPool"}
        },
        "ActivityLogCognitoUserPoolClientId": {
            "Description": "Client id to be used with Cognito during authentication",
            "Value": {"Ref": "UserPoolAppClient"}
        },
        "ActivityLogApiID": {
            "Description": "Rest API identifier",
            "Value": {"Ref": "ActivityLogApi"}
        },
        "ActivityLogApiKey": {
            "Description": "API key to be used with API Gateway when calling methods",
            "Value": {"Ref": "WebAppApiKey"}
        }
    }
}